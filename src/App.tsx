import { useState, useEffect, useCallback } from 'react'
import { useProjectState } from './hooks/useProjectState'
import { RepositorySelector } from './components/RepositorySelector'
import { AllFilesViewer } from './components/AllFilesViewer'
import { CommentsPanel } from './components/CommentsPanel'
import { MarkdownExport } from './components/MarkdownExport'
import { FileTree } from './components/FileTree'
import { RestoreNotification } from './components/RestoreNotification'
import { TemplatesManager } from './components/TemplatesManager'
import { Button, Section, SettingItem, InfoCard } from './components/ui'
import { 
  saveCurrentFile, 
  loadCurrentFile, 
  saveSidebarWidth, 
  loadSidebarWidth,
  saveShowSidebar, 
  loadShowSidebar,
  saveActivePanel, 
  loadActivePanel,
  saveVirtualizationEnabled, 
  loadVirtualizationEnabled,
  saveDebugMode, 
  loadDebugMode
} from './utils/localStorage'
import './App.css'

function App() {
  const [currentFile, setCurrentFile] = useState<string | null>(() => loadCurrentFile())
  const [scrollToFile, setScrollToFile] = useState<string | null>(null)

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–∫—Ä–æ–ª–ª–æ–º
  const handleFileSelect = useCallback((filePath: string) => {
    setCurrentFile(filePath)
    setScrollToFile(filePath)
  }, [])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—é
  const handleNavigateToComment = useCallback((filePath: string, lineNumber: number) => {
    setCurrentFile(filePath)
    setScrollToFile(filePath)
    
    // –ù–ï –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Ñ–∞–π–ª–æ–≤ - –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
    // –ù–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –æ–±–ª–∞—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫ –Ω—É–∂–Ω–æ–º—É —Ñ–∞–π–ª—É
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    setTimeout(() => {
      const lineElement = document.querySelector(`[data-line-number="${lineNumber}"]`);
      if (lineElement) {
        lineElement.scrollIntoView({ 
          behavior: 'smooth', 
          block: 'center' 
        });
      }
    }, 500);
  }, [])
  const [showSidebar, setShowSidebar] = useState(() => loadShowSidebar())
  const [isMobileView, setIsMobileView] = useState(false)
  const [showRepoSettings, setShowRepoSettings] = useState(false)
  const [activePanel, setActivePanel] = useState<'files' | 'comments' | 'export' | 'templates'>(() => {
    const loaded = loadActivePanel() as 'files' | 'comments' | 'export' | 'templates' | 'readme';
    // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –≤–∫–ª–∞–¥–∫–∞ 'readme', –∏—Å–ø–æ–ª—å–∑—É–µ–º 'files'
    return loaded === 'readme' ? 'files' : loaded;
  })
  const [sidebarWidth, setSidebarWidth] = useState(() => loadSidebarWidth())
  const [isResizing, setIsResizing] = useState(false)
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const [virtualizationEnabled, setVirtualizationEnabled] = useState(() => loadVirtualizationEnabled())
  const [debugMode, setDebugMode] = useState(() => loadDebugMode())
  
  const {
    repository,
    comments,
    allFiles,
    isLoading,
    pendingUrl,
    shouldPromptRestore,
    categories,
    templates,
    selectRepository,
    setRepositoryUrl,
    addComment,
    removeComment,
    updateComment,
    clearComments,
    restoreLastDirectory,
    dismissRestore,
    startNewRepository,
    addCategory,
    addTemplate,
    updateTemplate,
    removeTemplate,
    useTemplate,
    duplicateTemplate
  } = useProjectState()

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  useEffect(() => {
    const checkMobile = () => {
      setIsMobileView(window.innerWidth <= 768)
      if (window.innerWidth <= 768) {
        setShowSidebar(false)
      }
    }
    
    checkMobile()
    window.addEventListener('resize', checkMobile)
    return () => window.removeEventListener('resize', checkMobile)
  }, [])

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —à–∏—Ä–∏–Ω—ã —Å–∞–π–¥–±–∞—Ä–∞
  useEffect(() => {
    document.documentElement.style.setProperty('--gitlab-sidebar-width', `${sidebarWidth}px`)
  }, [sidebarWidth])


  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ localStorage
  useEffect(() => {
    saveCurrentFile(currentFile)
  }, [currentFile])

  useEffect(() => {
    saveSidebarWidth(sidebarWidth)
  }, [sidebarWidth])

  useEffect(() => {
    saveShowSidebar(showSidebar)
  }, [showSidebar])

  useEffect(() => {
    saveActivePanel(activePanel)
  }, [activePanel])

  useEffect(() => {
    saveVirtualizationEnabled(virtualizationEnabled)
  }, [virtualizationEnabled])

  useEffect(() => {
    saveDebugMode(debugMode)
  }, [debugMode])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å–∞–π–¥–±–∞—Ä–∞
  const handleMouseDown = (e: React.MouseEvent) => {
    e.preventDefault()
    setIsResizing(true)
  }

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      if (!isResizing) return
      
      const newWidth = e.clientX
      if (newWidth >= 500 && newWidth <= 800) {
        setSidebarWidth(newWidth)
      }
    }

    const handleMouseUp = () => {
      setIsResizing(false)
    }

    if (isResizing) {
      document.addEventListener('mousemove', handleMouseMove)
      document.addEventListener('mouseup', handleMouseUp)
      document.body.style.cursor = 'col-resize'
      document.body.style.userSelect = 'none'
    } else {
      document.body.style.cursor = ''
      document.body.style.userSelect = ''
    }

    return () => {
      document.removeEventListener('mousemove', handleMouseMove)
      document.removeEventListener('mouseup', handleMouseUp)
      document.body.style.cursor = ''
      document.body.style.userSelect = ''
    }
  }, [isResizing])


  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –µ—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ (–ø–∞–ø–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞)
  if (allFiles.length === 0) {
    return (
      <div className="d-flex align-center justify-center" style={{ minHeight: '100vh' }}>
        <div style={{ maxWidth: '500px', width: '100%', padding: '20px' }}>
          <div style={{ textAlign: 'center', marginBottom: '32px' }}>
            <h1 style={{ fontSize: '24px', marginBottom: '8px' }}>
              Code Review
            </h1>
          </div>
          <RepositorySelector
            repository={repository}
            onRepositorySelect={selectRepository}
            onRepositoryUrlSet={setRepositoryUrl}
            isLoading={isLoading}
            onClose={undefined} // –ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –Ω–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            allFilesCount={allFiles.length}
            isSettingsModal={false} // –ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ —ç—Ç–æ –Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            pendingUrl={pendingUrl}
          />
        </div>
      </div>
    )
  }

  return (
      <div>
      {/* Restore Notification */}
      {shouldPromptRestore && repository && (
        <RestoreNotification
          repositoryName={repository.name}
          onRestore={restoreLastDirectory}
          onDismiss={dismissRestore}
          onNewRepository={startNewRepository}
        />
      )}

      {/* GitLab Header */}
      <header className="gitlab-header d-flex align-center justify-between px-3">
        <div className="d-flex align-center gap-4 flex-1">
          {/* Menu Toggle —É–±—Ä–∞–Ω - —Ç–µ–ø–µ—Ä—å –Ω–∞ —Å–∞–π–¥–±–∞—Ä–µ */}
          
          {/* Logo and Project Info */}
          <div className="d-flex align-center gap-3">
            <div className="gitlab-header-logo">
              üìÑ
            </div>
            <div className="gitlab-header-info">
              <h1 className="gitlab-header-title">
                Code Review Tool
              </h1>
              {repository && (
                <div className="gitlab-header-subtitle">
                  {repository.name}
                  {repository.baseUrl && (
                    <span className="gitlab-header-host">
                      ‚Ä¢ {new URL(repository.baseUrl).hostname}
                    </span>
                  )}
                </div>
              )}
            </div>
          </div>
          
          {/* Current File Breadcrumb */}
          {currentFile && (
            <div className="gitlab-header-breadcrumb">
              <span className="gitlab-breadcrumb-separator">/</span>
              <span className="gitlab-breadcrumb-file">
                {currentFile}
              </span>
            </div>
          )}
          
        </div>
        
        {/* Action Buttons */}
        <div className="d-flex align-center gap-2">
          {/* Project Stats */}
          {repository && (
            <div className="gitlab-header-stats">
              <div className="gitlab-stat-item" title="–§–∞–π–ª–æ–≤ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏">
                <span className="gitlab-stat-icon">üìÅ</span>
                <span className="gitlab-stat-value">{allFiles.length}</span>
              </div>
              <div className="gitlab-stat-item" title="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤">
                <span className="gitlab-stat-icon gitlab-stat-icon-orange">üí¨</span>
                <span className="gitlab-stat-value">{comments.length}</span>
              </div>
              <div className="gitlab-stat-item" title="–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ localStorage">
                <span className="gitlab-stat-icon gitlab-stat-icon-green">üíæ</span>
                <span className="gitlab-stat-value gitlab-stat-text">–ê–í–¢–û</span>
              </div>
              {comments.length > 0 && (
                <div className="gitlab-stat-item" title="–§–∞–π–ª–æ–≤ —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏">
                  <span className="gitlab-stat-icon gitlab-stat-icon-green">üìä</span>
                  <span className="gitlab-stat-value">
                    {new Set(comments.map(c => c.filePath)).size}
                  </span>
                </div>
              )}
            </div>
          )}
          
          {/* Settings Button */}
          <Button
            variant={repository?.baseUrl ? 'success' : 'blue'}
            size="sm"
            onClick={() => setShowRepoSettings(true)}
            title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
          >
            {repository?.baseUrl ? '‚öôÔ∏è' : 'üîß'}
          </Button>

          {/* New Repository Button */}
          {repository && (
            <Button
              variant="secondary"
              size="sm"
              onClick={() => {
                if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–æ–≤—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º? –í—Å–µ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
                  startNewRepository();
                }
              }}
              title="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–æ–≤—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
            >
              üÜï
            </Button>
          )}
        </div>
      </header>

      {/* Mobile Overlay */}
      {isMobileView && showSidebar && (
        <div 
          className="gitlab-mobile-overlay"
          onClick={() => setShowSidebar(false)}
        />
      )}

      {/* –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ toggle —Å–∞–π–¥–±–∞—Ä–∞ */}
      {!isMobileView && (
        <Button
          variant="secondary"
          size="sm"
          onClick={() => setShowSidebar(!showSidebar)}
          style={{
            position: 'fixed',
            top: '58px',
            left: showSidebar ? `${sidebarWidth - 15}px` : '10px',
            width: '30px',
            height: '30px',
            padding: '0',
            zIndex: '1002',
            borderRadius: '50%',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            fontSize: '14px',
            boxShadow: '0 2px 8px rgba(0,0,0,0.15)',
            transition: 'left 0.3s ease'
          }}
          title={showSidebar ? "–°–∫—Ä—ã—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å"}
        >
          {showSidebar ? '‚óÄ' : '‚ñ∂'}
        </Button>
      )}

      {/* GitLab Sidebar */}
      <aside className={`gitlab-sidebar ${isMobileView && showSidebar ? 'open' : ''} ${!isMobileView && !showSidebar ? 'hidden' : ''}`}>

        {/* Sidebar Resizer */}
        {!isMobileView && showSidebar && (
          <div
            className="gitlab-sidebar-resizer"
            onMouseDown={handleMouseDown}
          />
        )}

        {/* Sidebar Header */}
        <div className="gitlab-sidebar-header">
          <div className="d-flex justify-between align-center mb-3">
            <h3 style={{ fontSize: '14px', fontWeight: '600', color: 'var(--gitlab-text-primary)' }}>
              –ü—Ä–æ–µ–∫—Ç
            </h3>
            <div className="d-flex align-center gap-2">
              {/* Mobile Close Button - —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
              {isMobileView && (
                <button
                  onClick={() => setShowSidebar(false)}
                  className="btn-secondary btn-sm"
                >
                  ‚úï
                </button>
              )}
            </div>
      </div>
          
          {/* Panel Tabs */}
          <div className="gitlab-panel-tabs">
            <button
              onClick={() => setActivePanel('files')}
              className={`gitlab-panel-tab ${activePanel === 'files' ? 'active' : ''}`}
            >
              –§–∞–π–ª—ã
            </button>
            <button
              onClick={() => setActivePanel('comments')}
              className={`gitlab-panel-tab ${activePanel === 'comments' ? 'active' : ''}`}
            >
              –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ {comments.length > 0 && `(${comments.length})`}
            </button>
           <button
               onClick={() => setActivePanel('export')}
               className={`gitlab-panel-tab ${activePanel === 'export' ? 'active' : ''}`}
             >
               –≠–∫—Å–ø–æ—Ä—Ç
            </button>
            <button
              onClick={() => setActivePanel('templates')}
              className={`gitlab-panel-tab ${activePanel === 'templates' ? 'active' : ''}`}
            >
              –®–∞–±–ª–æ–Ω—ã {templates.length > 0 && `(${templates.length})`}
            </button>
           </div>
        </div>

        {/* Sidebar Content */}
        <div className="gitlab-sidebar-content">
          {activePanel === 'files' && (
            <FileTree
              files={allFiles}
              comments={comments}
              currentFile={currentFile}
              onFileSelect={handleFileSelect}
            />
          )}

          {activePanel === 'comments' && (
            <div style={{ padding: '16px' }}>
              <CommentsPanel
                comments={comments}
                repository={repository}
                categories={categories}
                onUpdateComment={updateComment}
                onRemoveComment={removeComment}
                onClearComments={clearComments}
                onAddCategory={addCategory}
                onNavigateToComment={handleNavigateToComment}
              />
            </div>
          )}

          {activePanel === 'export' && (
            <div style={{ padding: '16px' }}>
              <MarkdownExport
                comments={comments}
                repository={repository}
                allFiles={allFiles}
                categories={categories}
              />
            </div>
          )}

          {activePanel === 'templates' && (
            <div style={{ padding: '16px' }}>
              <TemplatesManager
                templates={templates}
                onAddTemplate={addTemplate}
                onUpdateTemplate={updateTemplate}
                onRemoveTemplate={removeTemplate}
                onDuplicateTemplate={duplicateTemplate}
              />
            </div>
          )}
        </div>
      </aside>

      {/* GitLab Main Content */}
      <main className={`gitlab-main ${!showSidebar ? 'sidebar-hidden' : ''}`}>
        <div className="gitlab-content">
        {/* Breadcrumbs */}
        <div className="gitlab-breadcrumbs">
          <span className="gitlab-breadcrumb-item">
            {repository?.name || 'Repository'}
          </span>
          {currentFile && (
            <>
              <span className="gitlab-breadcrumb-separator">/</span>
              <span style={{ color: 'var(--gitlab-text-primary)' }}>
                {currentFile}
              </span>
            </>
          )}
        </div>

        {/* File Content */}
        <div className="p-4">
            <AllFilesViewer
              files={allFiles}
              comments={comments}
              categories={categories}
              templates={templates}
              onAddCategory={addCategory}
              onUseTemplate={useTemplate}
              onAddComment={addComment}
              onUpdateComment={updateComment}
              onDeleteComment={removeComment}
              scrollToFile={scrollToFile}
              onScrollComplete={() => setScrollToFile(null)}
              currentFile={currentFile}
              onCurrentFileChange={setCurrentFile}
              virtualizationEnabled={virtualizationEnabled}
              debugMode={debugMode}
            />
        </div>
        </div>
      </main>

      {/* Settings Modal */}
      {showRepoSettings && (
        <div 
          style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            backgroundColor: 'rgba(0, 0, 0, 0.6)',
            zIndex: 1100,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center'
          }}
          onClick={() => setShowRepoSettings(false)}
        >
          <div 
            className="fade-in"
            style={{
              backgroundColor: 'var(--gitlab-bg-secondary)',
              borderRadius: '8px',
              padding: '24px',
              maxWidth: '500px',
              width: '90%',
              maxHeight: '80vh',
              overflow: 'auto',
              border: '1px solid var(--gitlab-border-light)'
            }}
            onClick={(e) => e.stopPropagation()}
          >
                  <div className="d-flex justify-between align-center mb-3">
                    <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è</h3>
                    <Button
                      variant="secondary"
                      size="sm"
                      onClick={() => setShowRepoSettings(false)}
                    >
                      ‚úï
                    </Button>
            </div>

            <RepositorySelector
              repository={repository}
              onRepositorySelect={selectRepository}
              onRepositoryUrlSet={(baseUrl, defaultBranch) => {
                setRepositoryUrl(baseUrl, defaultBranch);
                setShowRepoSettings(false);
              }}
              isLoading={isLoading}
              onClose={() => setShowRepoSettings(false)}
              allFilesCount={allFiles.length}
              isSettingsModal={true}
              pendingUrl={pendingUrl}
            />

            {/* Divider */}
            <div style={{
              height: '1px',
              backgroundColor: 'var(--gitlab-border-light)',
              margin: '24px 0'
            }}></div>

            {/* Performance Settings */}
            <Section title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏" icon="‚öôÔ∏è">
              {/* Virtualization Toggle */}
              <SettingItem
                title="–í–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è"
                description="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∑–∫–æ–π/–≤—ã–≥—Ä—É–∑–∫–æ–π —Ñ–∞–π–ª–æ–≤"
                icon="üìÅ"
              >
                <Button
                  variant={virtualizationEnabled ? 'success' : 'danger'}
                  size="sm"
                  onClick={() => setVirtualizationEnabled(!virtualizationEnabled)}
                  style={{ minWidth: '60px' }}
                >
                  {virtualizationEnabled ? 'ON' : 'OFF'}
                </Button>
              </SettingItem>

              {/* Debug Mode Toggle */}
              <SettingItem
                title="–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏"
                description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"
                icon="üêõ"
              >
                <Button
                  variant={debugMode ? 'blue' : 'secondary'}
                  size="sm"
                  onClick={() => setDebugMode(!debugMode)}
                  style={{ minWidth: '60px' }}
                >
                  {debugMode ? 'ON' : 'OFF'}
                </Button>
              </SettingItem>


              {/* Performance Info */}
              <InfoCard type="info">
                üí° <strong>–°–æ–≤–µ—Ç:</strong> –í–∫–ª—é—á–∏—Ç–µ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ —Å 50+ —Ñ–∞–π–ª–∞–º–∏. 
                –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
              </InfoCard>
            </Section>
          </div>
        </div>
      )}
      </div>
  )
}

export default App
