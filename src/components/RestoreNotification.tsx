import { Button } from './ui';

interface RestoreNotificationProps {
  repositoryName: string;
  onRestore: () => void;
  onDismiss: () => void;
  onNewRepository?: () => void;
}

export const RestoreNotification = ({ repositoryName, onRestore, onDismiss, onNewRepository }: RestoreNotificationProps) => {
  return (
    <div style={{
      position: 'fixed',
      top: '20px',
      right: '20px',
      zIndex: 1000,
      backgroundColor: 'var(--gitlab-bg-secondary)',
      border: '1px solid var(--gitlab-border-light)',
      borderRadius: '8px',
      padding: '16px',
      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
      maxWidth: '400px',
      animation: 'slideIn 0.3s ease-out'
    }}>
      <div style={{ 
        display: 'flex', 
        alignItems: 'flex-start', 
        gap: '12px' 
      }}>
        <div style={{ fontSize: '20px' }}>üìÅ</div>
        <div style={{ flex: 1 }}>
          <div style={{ 
            fontWeight: 600, 
            marginBottom: '4px',
            color: 'var(--gitlab-text-primary)'
          }}>
            –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π?
          </div>
          <div style={{ 
            fontSize: '14px', 
            color: 'var(--gitlab-text-secondary)',
            marginBottom: '12px'
          }}>
            –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è <strong>{repositoryName}</strong>. 
            –•–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ —Ç–æ–π –∂–µ –ø–∞–ø–∫–∏?
          </div>
          <div style={{ 
            display: 'flex', 
            gap: '8px',
            flexWrap: 'wrap'
          }}>
            <Button 
              variant="blue" 
              size="sm" 
              onClick={onRestore}
            >
              üìÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
            </Button>
            <Button 
              variant="secondary" 
              size="sm" 
              onClick={onDismiss}
            >
              ‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
            </Button>
            {onNewRepository && (
              <Button 
                variant="secondary" 
                size="sm" 
                onClick={() => {
                  if (confirm('–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–æ–≤—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
                    onNewRepository();
                  }
                }}
                title="–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
              >
                üÜï –ù–æ–≤—ã–π
              </Button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};
